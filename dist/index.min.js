metadata={systemName:"GenerateDocument",displayName:"Generate Document",description:"Service to generate document",configuration:{mbh:{displayName:"MBH Workflow",type:"string"},anotherWorkflow:{displayName:"Another Workflow",type:"string"},ServiceKey:{displayName:"Service Key for document generation",type:"number",required:!0,value:"1"},stringFormat:{displayName:"String Format",type:"string",value:"Alphanumeric"}}},ondescribe=async function({configuration:e}){e.documentType&&e.documentType.toString(),postSchema({objects:{document:{displayName:"Document",description:"Manages document generation",properties:{id:{displayName:"ID",type:"number"},name:{displayName:"Name",type:"string"},type:{displayName:"Type",type:"string"},base64Data:{displayName:"Base64 Data",type:"string"},jsonData1:{displayName:"JSON Data 1",type:"string"},jsonData2:{displayName:"JSON Data 2",type:"string"},jsonData3:{displayName:"JSON Data 3",type:"string"},jsonData4:{displayName:"JSON Data 4",type:"string"},documentType:{displayName:"Document Type",type:"string"}},methods:{generate:{displayName:"Generate Document",type:"execute",inputs:["id","name","type","base64Data","jsonData1","jsonData2","jsonData3","jsonData4","documentType"],outputs:["jsonResult"]}}}}})},onexecute=async function({objectName:e,methodName:t,parameters:a,properties:n,configuration:o,schema:i}){if("document"!==e)throw new Error("The object "+e+" is not supported.");await async function(e,t){if("generate"!==e)throw new Error("The method "+e+" is not supported.");await async function(e){try{const t=e.type.toString(),a=e.documentType.toString(),n=await function(e,t,a){switch(t){case"mbh":return function(e,t){return new Promise(((a,n)=>{try{const n=JSON.parse(e.jsonData1.toString()),o=JSON.parse(e.jsonData2.toString()),i=JSON.parse(e.jsonData3.toString()),r=JSON.parse(e.jsonData4.toString()),s=o.value,_=i.value,c=r.value;console.log("document_attach",c);const p=c.reduce(((e,t)=>(e[t.NCR_ID]=t["File@odata.mediaReadLink"],e)),{}),u=s.map((e=>({plan_A:e.MBH_NCR_Description||"",plan_B:e.MBH_NCR_ActionPICEmail||"",plan_C:e.MBH_NCR_PlanDate.substring(0,10)||"",plan_D:e.MBH_NCR_Response||"",plan_E:e.MBH_NCR_ExectionDate.substring(0,10)||"",plan_F:p[e.MBH_NCR_NCRID_fk]||""}))),m=s.map((e=>({resume_A:e.MBH_NCR_Description||"",resume_B:e.MBH_NCR_PlanDate.substring(0,10)||"",resume_C:e.MBH_NCR_ActionPlanApprovalStatusByQuality||"",resume_D:e.MBH_NCR_ActionPlanApprovalStatusByClient||"",resume_E:"Oui"===e.MBH_NCR_ActionResponseApprovalStatusByPlanPIC?"Satisfaisant":"",resume_F:e.MBH_NCR_ActionResponseApprovalStatusByClient||""}))),N=_.map((e=>({historique_A:e.ODataProperty__GCPC_NCR_PICEmail||"",historique_B:e.GCPC_NCR_ResponseDate.substring(0,10)||"",historique_C:e.GCPC_NCR_Step||"",historique_D:e.GCPC_NCR_Comment||""}))),l=c.map((e=>({doc_A:e.FileName||"",doc_B:e.FileDescription||"",doc_C:e.Comment||"",doc_D:e.UploadedBy||"",doc_E:e.Upload_Date.substring(0,10)||"",doc_F:e.FileName||"",doc_G:e["File@odata.mediaReadLink"]||"",doc_H:e.Step||""})));console.log("payload1",n);const d={instance_A:n.UCI||"",instance_B:"MBH NCR",instance_C:n.NCRStatus||"",instance_D:n.InitiatorName||"",instance_E:n.InitiatorEmail||"",instance_F:n.NCRRequestDate.substring(0,10)||"",info_A:n.NCRLot||"",info_B:n.NCRProjectNumber||"",info_C:n.ProjectTitle||"",info_D:n.NCRContractTitle||"",info_E:n.NCRContractNumber||"",info_F:n.STMDesignRepresentative||"",info_G:n.RepresentativeAdjudicateur||"",info_H:n.NCRIssuer||"",info_I:n.NCRSector||"",info_J:n.NCRWBS||"",info_K:n.NCRDiscipline||"",info_L:n.MBH_NCR_For||"",info_M:n.MBH_NCR_Activity||"",info_N:n.MBH_NCR_IsSubcontractor||"",info_O:n.MBH_NCR_SousActivity||"",info_Q:n.WBSTEXT||"",ref_chantier_pie:n.MBH_NCR_Reference||"",categorie_nc:n.NCRCategory||"",titre:n.NCRTitle||"",date:n.NCRDate.substring(0,10)||"",autre_ref:n.NCROtherReference||"",date_reponse:n.NCRResponseRequiredBy.substring(0,10)||"",type_nc:n.MBH_NCR_Type||"",sous_type_nc:n.MBH_NCR_SubType||"",description:n.NCRDescription||"",gerant_projet:n.MBH_NCR_ProjectManagerEmail||"",impact:n.MBH_NCR_ImpactPlanAsBuilt||"",tables:[{anchor:"plan_A",data:u},{anchor:"resume_A",data:m},{anchor:"doc_A",data:l},{anchor:"historique_A",data:N}],outputName:"pdf"===t?"MBH_NCR_RNC_Main_Form.pdf":"MBH_NCR_RNC_Main_Form.docx",base64File:e.base64Data.toString()};console.log("jsonobject",d),a(d)}catch(e){n(e)}}))}(e,a);case"anotherWorkflow":return Promise.resolve({message:"Another workflow not implemented yet."});default:return Promise.reject(new Error("Unsupported workflow type: "+t))}}(e,t,a);postResult({jsonResult:JSON.stringify(n)})}catch(e){throw new Error("Error generating document: "+e.message)}}(t)}(t,n)};
